=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'cgi'

module Marqeta
  class DigitalWalletProvisionRequestsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Validates and creates Android-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletAndroidPayProvisionRequest] :body 
    # @return [DigitalWalletAndroidPayProvisionResponse]
    def post_digitalwalletprovisionrequests_androidpay(opts = {})
      data, _status_code, _headers = post_digitalwalletprovisionrequests_androidpay_with_http_info(opts)
      data
    end

    # Validates and creates Android-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletAndroidPayProvisionRequest] :body 
    # @return [Array<(DigitalWalletAndroidPayProvisionResponse, Integer, Hash)>] DigitalWalletAndroidPayProvisionResponse data, response status code and response headers
    def post_digitalwalletprovisionrequests_androidpay_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_androidpay ...'
      end
      # resource path
      local_var_path = '/digitalwalletprovisionrequests/androidpay'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'body'])

      # return_type
      return_type = opts[:debug_return_type] || 'DigitalWalletAndroidPayProvisionResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_androidpay",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DigitalWalletProvisionRequestsApi#post_digitalwalletprovisionrequests_androidpay\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Validates Apple certificates and creates Apple-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletApplePayProvisionRequest] :body 
    # @return [DigitalWalletApplePayProvisionResponse]
    def post_digitalwalletprovisionrequests_applepay(opts = {})
      data, _status_code, _headers = post_digitalwalletprovisionrequests_applepay_with_http_info(opts)
      data
    end

    # Validates Apple certificates and creates Apple-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletApplePayProvisionRequest] :body 
    # @return [Array<(DigitalWalletApplePayProvisionResponse, Integer, Hash)>] DigitalWalletApplePayProvisionResponse data, response status code and response headers
    def post_digitalwalletprovisionrequests_applepay_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_applepay ...'
      end
      # resource path
      local_var_path = '/digitalwalletprovisionrequests/applepay'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'body'])

      # return_type
      return_type = opts[:debug_return_type] || 'DigitalWalletApplePayProvisionResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_applepay",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DigitalWalletProvisionRequestsApi#post_digitalwalletprovisionrequests_applepay\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Validates and creates Samsung-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletAndroidPayProvisionRequest] :body 
    # @return [DigitalWalletSamsungPayProvisionResponse]
    def post_digitalwalletprovisionrequests_samsungpay(opts = {})
      data, _status_code, _headers = post_digitalwalletprovisionrequests_samsungpay_with_http_info(opts)
      data
    end

    # Validates and creates Samsung-specific provisioning request data
    # @param [Hash] opts the optional parameters
    # @option opts [DigitalWalletAndroidPayProvisionRequest] :body 
    # @return [Array<(DigitalWalletSamsungPayProvisionResponse, Integer, Hash)>] DigitalWalletSamsungPayProvisionResponse data, response status code and response headers
    def post_digitalwalletprovisionrequests_samsungpay_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_samsungpay ...'
      end
      # resource path
      local_var_path = '/digitalwalletprovisionrequests/samsungpay'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'body'])

      # return_type
      return_type = opts[:debug_return_type] || 'DigitalWalletSamsungPayProvisionResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DigitalWalletProvisionRequestsApi.post_digitalwalletprovisionrequests_samsungpay",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DigitalWalletProvisionRequestsApi#post_digitalwalletprovisionrequests_samsungpay\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
