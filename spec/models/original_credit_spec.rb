=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Marqeta::OriginalCredit
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Marqeta::OriginalCredit do
  let(:instance) { Marqeta::OriginalCredit.new }

  describe 'test an instance of OriginalCredit' do
    it 'should create an instance of OriginalCredit' do
      expect(instance).to be_instance_of(Marqeta::OriginalCredit)
    end
  end
  describe 'test attribute "transaction_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ACCOUNT_TO_ACCOUNT", "PERSON_TO_PERSON", "WALLET_TRANSFER", "MONEY_TRANSFER_BY_BANK", "BUSINESS_TO_BUSINESS", "DISBURSEMENT", "GOVERNMENT_DISBURSEMENT", "GAMBLING_PAYOUT", "LOYALTY", "MERCHANT_DISBURSEMENT", "ONLINE_GAMBLING_PAYOUT", "PENSION_DISBURSEMENT", "PREPAID_LOADS", "CARD_BILL_PAYMENT", "BILL_PAYMENT", "CASH_CLAIM", "CASH_IN", "CASH_OUT", "MOBILE_AIR_TIME_PAYMENT", "MONEY_TRANSFER_BY_MERCHANT", "FACE_TO_FACE_MERCHANT_PAYMENT", "GOVERNMENT_PAYMENT", "PAYMENTS_GOODS_SERVICES", "FUNDS_TRANSFER"])
      # validator.allowable_values.each do |value|
      #   expect { instance.transaction_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "funding_source"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CREDIT", "DEBIT", "PREPAID", "DEPOSIT_ACCOUNT", "CASH", "MOBILE_MONEY_ACCOUNT", "NON_VISA_CREDIT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.funding_source = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sender_account_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["OTHER", "RTN_BANK_ACCOUNT", "IBAN", "CARD_ACCOUNT", "EMAIL", "PHONE_NUMBER", "BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE", "WALLET_ID", "SOCIAL_NETWORK_ID"])
      # validator.allowable_values.each do |value|
      #   expect { instance.sender_account_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sender_name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sender_address"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sender_city"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sender_state"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "sender_country"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "screening_score"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
