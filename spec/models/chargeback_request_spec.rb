=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Marqeta::ChargebackRequest
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Marqeta::ChargebackRequest do
  let(:instance) { Marqeta::ChargebackRequest.new }

  describe 'test an instance of ChargebackRequest' do
    it 'should create an instance of ChargebackRequest' do
      expect(instance).to be_instance_of(Marqeta::ChargebackRequest)
    end
  end
  describe 'test attribute "reason_description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["SERVICE_NOT_PROVIDED_MERCHANDISE_NOT_RECEIVED", "CANCELLED_RECURRING_TRANSACTION", "NOT_AS_DESCRIBED_OR_DEFECTIVE_MERCHANDISE", "FRAUD_MULTIPLE_TRANSACTIONS", "FRAUD_TRANSACTION", "NO_AUTHORIZATION", "LATE_PRESENTMENT", "TRANSACTION_NOT_RECOGNIZED", "INCORRECT_CURRENCY", "INCORRECT_TRANSACTION_CODE", "INCORRECT_CURRENCY_OR_TRANSACTION_CODE", "INCORRECT_TRANSACTION_AMOUNT", "INCORRECT_ACCOUNT_NUMBER", "INCORRECT_TRANSACTION_AMOUNT_OR_ACCOUNT_NUMBER", "NOT_AUTHORIZED_CARD_PRESENT", "NOT_AUTHORIZED_CARD_ABSENT", "CREDIT_NOT_PROCESSED", "NON_RECEIPT_OF_CASH_OR_LOAD_TRANSACTION_VALUE_AT_ATM"])
      # validator.allowable_values.each do |value|
      #   expect { instance.reason_description = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "reason_code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "token"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "transaction_token"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "amount"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "memo"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "credit_user"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "channel"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["GATEWAY", "GATEWAY_AUTOMATED", "ISSUER", "ISSUER_AUTOMATED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.channel = value }.not_to raise_error
      # end
    end
  end

end
