=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Marqeta::Pos
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Marqeta::Pos do
  let(:instance) { Marqeta::Pos.new }

  describe 'test an instance of Pos' do
    it 'should create an instance of Pos' do
      expect(instance).to be_instance_of(Marqeta::Pos)
    end
  end
  describe 'test attribute "pan_entry_mode"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNKNOWN", "MANUAL", "MAG_STRIPE", "MAG_STRIPE_CONTACTLESS", "BAR_CODE", "OCR", "MICR", "CHIP", "CHIP_CONTACTLESS", "CARD_ON_FILE", "CHIP_FALLBACK", "OTHER"])
      # validator.allowable_values.each do |value|
      #   expect { instance.pan_entry_mode = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "pin_entry_mode"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNKNOWN", "TRUE", "FALSE", "DEFECTIVE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.pin_entry_mode = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "terminal_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "terminal_attendance"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNSPECIFIED", "ATTENDED", "UNATTENDED", "NO_TERMINAL"])
      # validator.allowable_values.each do |value|
      #   expect { instance.terminal_attendance = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "terminal_location"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ON_PREMISE", "OFF_PREMISE_MERCHANT", "OFF_PREMISE_CARDHOLDER", "NO_TERMINAL"])
      # validator.allowable_values.each do |value|
      #   expect { instance.terminal_location = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "card_holder_presence"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "cardholder_authentication_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNSPECIFIED", "NON_AUTHENTICATED", "SIGNATURE", "PIN", "ID_VERIFIED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.cardholder_authentication_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "card_presence"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "pin_present"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "terminal_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["AUTO_DISPENSER_WITH_PIN", "SELF_SERVICE", "LIMITED_AMOUNT", "IN_FLIGHT", "ECOMMERCE", "TRANSPONDER"])
      # validator.allowable_values.each do |value|
      #   expect { instance.terminal_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "card_data_input_capability"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNKNOWN", "NO_TERMINAL", "MAG_STRIPE", "MAG_STRIPE_CONTACTLESS", "MAG_STRIPE_KEY_ENTRY", "CHIP", "CHIP_CONTACTLESS", "CHIP_MAG_STRIPE", "CHIP_MAG_STRIPE_KEY_ENTRY", "KEY_ENTRY", "OCR", "MICR", "BAR_CODE"])
      # validator.allowable_values.each do |value|
      #   expect { instance.card_data_input_capability = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "country_code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "zip"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "partial_approval_capable"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "purchase_amount_only"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "is_recurring"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "is_installment"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
