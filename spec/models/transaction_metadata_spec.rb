=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Marqeta::TransactionMetadata
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Marqeta::TransactionMetadata do
  let(:instance) { Marqeta::TransactionMetadata.new }

  describe 'test an instance of TransactionMetadata' do
    it 'should create an instance of TransactionMetadata' do
      expect(instance).to be_instance_of(Marqeta::TransactionMetadata)
    end
  end
  describe 'test attribute "transaction_category"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["RETAIL_SALE", "BILL_PAY", "HOTEL", "HEALTH_CARE", "RESTAURANT", "AUTO_RENTAL", "AIRLINE", "PAYMENT", "HOSPITALIZATION_COLLEGE", "PHONE_MAIL_ECOMMERCE", "ATM", "TRANSIT"])
      # validator.allowable_values.each do |value|
      #   expect { instance.transaction_category = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "payment_channel"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["OTHER", "ATM", "ECOMMERCE", "MAIL", "PHONE", "MOTO"])
      # validator.allowable_values.each do |value|
      #   expect { instance.payment_channel = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "cross_border_transaction"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "authorization_life_cycle"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "is_lodging_auto_rental"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "lodging_auto_rental_start_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "transit"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "airline"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "moto_indicator"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["UNKNOWN", "MANUAL", "RECURRING", "INSTALLMENT", "OTHERS"])
      # validator.allowable_values.each do |value|
      #   expect { instance.moto_indicator = value }.not_to raise_error
      # end
    end
  end

end
