=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = Marqeta::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(Marqeta::UsersApi)
    end
  end

  # unit tests for get_users
  # Lists all users
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :search_type Search type
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [UserCardHolderListResponse]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_auth_clientaccesstoken_token
  # Returns a client access token
  # @param token Client access token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :application_token 
  # @return [ClientAccessTokenResponse]
  describe 'get_users_auth_clientaccesstoken_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_parenttoken_children
  # Lists all children of a parent user
  # @param parent_token Token of parent cardholder
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [UserCardHolderListResponse]
  describe 'get_users_parenttoken_children test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_phonenumber_phonenumber
  # Lists all users who match a phone number
  # @param phone_number Phone number
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [UserCardHolderListResponse]
  describe 'get_users_phonenumber_phonenumber test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_token
  # Returns a specific user
  # @param token User token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [UserCardHolderResponse]
  describe 'get_users_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_token_notes
  # Lists cardholder notes
  # @param token User token
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_index Start index
  # @option opts [Integer] :count Number of notes to retrieve
  # @option opts [String] :created_by Created by
  # @option opts [String] :created_by_user_role Comma-delimited list of created by user roles
  # @option opts [Boolean] :include_private Include private notes and private fields in note response
  # @option opts [String] :search_type Search type
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [CardHolderNoteListResponse]
  describe 'get_users_token_notes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_token_ssn
  # Returns a specific user&#39;s SSN
  # @param token User token
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :full_ssn 
  # @return [SsnResponseModel]
  describe 'get_users_token_ssn test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users
  # Creates a user
  # @param [Hash] opts the optional parameters
  # @option opts [CardHolderModel] :body 
  # @return [UserCardHolderResponse]
  describe 'post_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_changepassword
  # Updates a user password
  # @param body Password update object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_users_auth_changepassword test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_clientaccesstoken
  # Creates a client access token
  # @param [Hash] opts the optional parameters
  # @option opts [ClientAccessTokenRequest] :body 
  # @return [ClientAccessTokenResponse]
  describe 'post_users_auth_clientaccesstoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_login
  # Logs in a user
  # @param [Hash] opts the optional parameters
  # @option opts [LoginRequestModel] :body User login object
  # @return [LoginResponseModel]
  describe 'post_users_auth_login test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_logout
  # Logs out a user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_users_auth_logout test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_onetime
  # Creates a one-time token
  # @param [Hash] opts the optional parameters
  # @option opts [OneTimeRequestModel] :body One-time object
  # @return [AccessTokenResponse]
  describe 'post_users_auth_onetime test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_resetpassword
  # Generates a reset password email
  # @param [Hash] opts the optional parameters
  # @option opts [ResetUserPasswordEmailModel] :body 
  # @return [nil]
  describe 'post_users_auth_resetpassword test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_resetpassword_token
  # Resets a user password
  # @param token Reset password verification token
  # @param [Hash] opts the optional parameters
  # @option opts [ResetUserPasswordModel] :body 
  # @return [nil]
  describe 'post_users_auth_resetpassword_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_verifyemail
  # Generates an email verification request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_users_auth_verifyemail test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_auth_verifyemail_token
  # Verifies the email token
  # @param token Email verification token
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_users_auth_verifyemail_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_lookup
  # Lists all users
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :search_type Search type
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @option opts [UserCardHolderSearchModel] :body 
  # @return [UserCardHolderListResponse]
  describe 'post_users_lookup test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_users_token_notes
  # Creates a note for the cardholder
  # @param token User token
  # @param [Hash] opts the optional parameters
  # @option opts [CardholderNoteRequestModel] :body 
  # @return [CardholderNoteResponseModel]
  describe 'post_users_token_notes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_users_token
  # Updates a specific user
  # @param token User token
  # @param body User object
  # @param [Hash] opts the optional parameters
  # @return [CardHolderModel]
  describe 'put_users_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_users_token_notes_notestoken
  # Updates a specific note for a cardholder
  # @param token User token
  # @param notes_token Notes token
  # @param [Hash] opts the optional parameters
  # @option opts [CardholderNoteUpdateRequestModel] :body 
  # @return [CardholderNoteResponseModel]
  describe 'put_users_token_notes_notestoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
