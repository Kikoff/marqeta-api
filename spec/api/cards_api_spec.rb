=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::CardsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CardsApi' do
  before do
    # run before each test
    @api_instance = Marqeta::CardsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CardsApi' do
    it 'should create an instance of CardsApi' do
      expect(@api_instance).to be_instance_of(Marqeta::CardsApi)
    end
  end

  # unit tests for get_cards
  # Lists cards by the last 4 digits
  # @param last_four Last four digits of card number
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of cards to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [CardListResponse]
  describe 'get_cards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_barcode_barcode
  # Returns a card&#39;s metadata
  # @param barcode Barcode
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [CardResponse]
  describe 'get_cards_barcode_barcode test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_card_hash_showpan
  # Returns a specific card - PAN visible
  # @param card_hash Card Hash
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [Boolean] :show_cvv_number 
  # @return [CardResponse]
  describe 'get_cards_card_hash_showpan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_merchant_merchanttoken
  # Returns a merchant onboarding card
  # @param merchant_token Merchant token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [CardResponse]
  describe 'get_cards_merchant_merchanttoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_merchant_merchanttoken_showpan
  # Returns a specific card - PAN visible
  # @param merchant_token Merchant token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [Boolean] :show_cvv_number 
  # @return [CardResponse]
  describe 'get_cards_merchant_merchanttoken_showpan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_token
  # Returns a specific card
  # @param token Card token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :expand Object to expand
  # @return [CardResponse]
  describe 'get_cards_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_token_showpan
  # Returns a specific card - PAN visible
  # @param token Card token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [Boolean] :show_cvv_number 
  # @return [CardResponse]
  describe 'get_cards_token_showpan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cards_user_token
  # Lists all cards for a specific user
  # @param token User token
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of items to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @return [CardListResponse]
  describe 'get_cards_user_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cards
  # Creates a card
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :show_cvv_number Show CVV
  # @option opts [Boolean] :show_pan Show PAN
  # @option opts [CardRequest] :body 
  # @return [CardResponse]
  describe 'post_cards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cards_getbypan
  # Returns user and card tokens for the specified PAN
  # @param [Hash] opts the optional parameters
  # @option opts [PanRequest] :body 
  # @return [PanResponse]
  describe 'post_cards_getbypan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_cards_merchant_merchanttoken
  # Creates a merchant onboarding card
  # @param merchant_token Merchant token
  # @param [Hash] opts the optional parameters
  # @option opts [MerchantCardRequest] :body 
  # @return [CardResponse]
  describe 'post_cards_merchant_merchanttoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_cards_token
  # Updates a specific card
  # @param token Card token
  # @param [Hash] opts the optional parameters
  # @option opts [CardUpdateRequest] :body 
  # @return [CardResponse]
  describe 'put_cards_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
