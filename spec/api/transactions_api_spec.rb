=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::TransactionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TransactionsApi' do
  before do
    # run before each test
    @api_instance = Marqeta::TransactionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TransactionsApi' do
    it 'should create an instance of TransactionsApi' do
      expect(@api_instance).to be_instance_of(Marqeta::TransactionsApi)
    end
  end

  # unit tests for get_transactions
  # Returns transactions
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of transactions to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @option opts [String] :start_date Start date (yyyy-MM-dd | yyyy-MM-ddTHH:mm:ss.SS)
  # @option opts [String] :end_date End date (yyyy-MM-dd | yyyy-MM-ddTHH:mm:ss.SS)
  # @option opts [String] :type Comma-delimited list of transaction types to include
  # @option opts [String] :user_token User token
  # @option opts [String] :business_token Business token
  # @option opts [String] :acting_user_token Acting user token
  # @option opts [String] :card_token Card token
  # @option opts [String] :merchant_token Merchant token
  # @option opts [String] :campaign_token Campaign token
  # @option opts [String] :state Comma-delimited list of transaction states to display e.g. PENDING | CLEARED | COMPLETION | DECLINED | ERROR | ALL
  # @option opts [String] :version 
  # @option opts [Boolean] :verbose 
  # @return [TransactionModelListResponse]
  describe 'get_transactions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transactions_fundingsource_fundingsourcetoken
  # Returns transactions for a specific funding account
  # @param funding_source_token Funding account token
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of transactions to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @option opts [String] :start_date Start date (yyyy-MM-dd)
  # @option opts [String] :end_date End date (yyyy-MM-dd)
  # @option opts [String] :type Comma-delimited list of transaction types to include
  # @option opts [String] :polarity Type of transactions to retrieve: CREDIT or DEBIT
  # @option opts [String] :version 
  # @option opts [Boolean] :verbose 
  # @return [TransactionModelListResponse]
  describe 'get_transactions_fundingsource_fundingsourcetoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transactions_token
  # Returns a transaction
  # @param token Transaction token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :version 
  # @option opts [Boolean] :verbose 
  # @return [TransactionModel]
  describe 'get_transactions_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transactions_token_related
  # Returns related transactions
  # @param token Transaction token
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of transactions to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Sort order
  # @option opts [String] :start_date Start date (yyyy-MM-dd | yyyy-MM-ddTHH:mm:ss.SS)
  # @option opts [String] :end_date End date (yyyy-MM-dd | yyyy-MM-ddTHH:mm:ss.SS)
  # @option opts [String] :type Comma-delimited list of transaction types to include
  # @option opts [String] :state Comma-delimited list of transaction states to display e.g. PENDING | CLEARED | COMPLETION | ALL
  # @option opts [String] :version 
  # @option opts [Boolean] :verbose 
  # @return [TransactionModelListResponse]
  describe 'get_transactions_token_related test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
