=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::VelocityControlsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VelocityControlsApi' do
  before do
    # run before each test
    @api_instance = Marqeta::VelocityControlsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VelocityControlsApi' do
    it 'should create an instance of VelocityControlsApi' do
      expect(@api_instance).to be_instance_of(Marqeta::VelocityControlsApi)
    end
  end

  # unit tests for get_velocitycontrols
  # Queries velocity controls
  # @param [Hash] opts the optional parameters
  # @option opts [String] :card_product Card product token. Use \&quot;null\&quot; to get velocity controls that are not associated with any card product.
  # @option opts [String] :user User token. Use \&quot;null\&quot; to get velocity controls that are not associated with any user.
  # @option opts [Integer] :count Number of items to retrieve. Count can be between 1 - 10 items.
  # @option opts [Integer] :start_index Indicates from what row to start returning data.
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.
  # @return [VelocityControlListResponse]
  describe 'get_velocitycontrols test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_velocitycontrols_token
  # Returns a specific velocity control
  # @param token Velocity control token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [VelocityControlResponse]
  describe 'get_velocitycontrols_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_velocitycontrols_user_usertoken_available
  # Queries a user&#39;s velocity control balances
  # @param user_token User token
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of items to retrieve. Count can be between 1 - 10 items.
  # @option opts [Integer] :start_index Indicates from what row to start returning data.
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.
  # @option opts [String] :force_dto 
  # @return [VelocityControlBalanceListResponse]
  describe 'get_velocitycontrols_user_usertoken_available test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_velocitycontrols
  # Creates a velocity control
  # @param body Velocity control object
  # @param [Hash] opts the optional parameters
  # @return [VelocityControlResponse]
  describe 'post_velocitycontrols test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_velocitycontrols_token
  # Updates a specific velocity control
  # @param token Velocity control token
  # @param body Velocity control object
  # @param [Hash] opts the optional parameters
  # @return [VelocityControlResponse]
  describe 'put_velocitycontrols_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
