=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::AuthControlsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuthControlsApi' do
  before do
    # run before each test
    @api_instance = Marqeta::AuthControlsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthControlsApi' do
    it 'should create an instance of AuthControlsApi' do
      expect(@api_instance).to be_instance_of(Marqeta::AuthControlsApi)
    end
  end

  # unit tests for get_authcontrols
  # Lists all global auth control exceptions for the program
  # @param [Hash] opts the optional parameters
  # @option opts [String] :card_product Card product token. Use \&quot;null\&quot; to get auth controls that are not associated with any card product.
  # @option opts [String] :user User token. Use \&quot;null\&quot; to get auth controls that are not associated with any user.
  # @option opts [Integer] :count Number of items to retrieve. Count can be between 1 - 10 items.
  # @option opts [Integer] :start_index Indicates from what row to start returning data.
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.
  # @return [AuthControlListResponse]
  describe 'get_authcontrols test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authcontrols_exemptmids
  # Lists all auth control exempted MIDs for the program
  # @param [Hash] opts the optional parameters
  # @option opts [String] :card_product Card product token. Use \&quot;null\&quot; to get auth controls that are not associated with any card product.
  # @option opts [String] :user User token. Use \&quot;null\&quot; to get auth controls that are not associated with any user.
  # @option opts [Integer] :count Number of items to retrieve. Count can be between 1 - 10 items.
  # @option opts [Integer] :start_index Indicates from what row to start returning data.
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @option opts [String] :sort_by Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.
  # @return [AuthControlExemptMidsListResponse]
  describe 'get_authcontrols_exemptmids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authcontrols_exemptmids_token
  # Returns a specific auth control exemptmids
  # @param token Auth control token
  # @param [Hash] opts the optional parameters
  # @return [AuthControlExemptMidsResponse]
  describe 'get_authcontrols_exemptmids_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authcontrols_token
  # Returns a specific auth control exception
  # @param token Auth control token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [AuthControlResponse]
  describe 'get_authcontrols_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_authcontrols
  # Creates an auth control exception
  # @param body Auth control object
  # @param [Hash] opts the optional parameters
  # @return [AuthControlResponse]
  describe 'post_authcontrols test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_authcontrols_exemptmids
  # Creates an auth control for exempting MIDs
  # @param body Auth control exempt MID object
  # @param [Hash] opts the optional parameters
  # @return [AuthControlExemptMidsResponse]
  describe 'post_authcontrols_exemptmids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_authcontrols_exemptmids_token
  # Updates the status an auth control exemptmids
  # @param token Auth control token
  # @param [Hash] opts the optional parameters
  # @option opts [AuthControlExemptMidsUpdateRequest] :body 
  # @return [nil]
  describe 'put_authcontrols_exemptmids_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_authcontrols_token
  # Updates an auth control exception
  # @param token Auth control token
  # @param body Auth control object
  # @param [Hash] opts the optional parameters
  # @return [AuthControlResponse]
  describe 'put_authcontrols_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
