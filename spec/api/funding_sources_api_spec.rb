=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::FundingSourcesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FundingSourcesApi' do
  before do
    # run before each test
    @api_instance = Marqeta::FundingSourcesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FundingSourcesApi' do
    it 'should create an instance of FundingSourcesApi' do
      expect(@api_instance).to be_instance_of(Marqeta::FundingSourcesApi)
    end
  end

  # unit tests for get_all_ach_funding_sources
  # Returns a list of Program ACH funding sources
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of items to retrieve. Count can be between 1 - 10 items.
  # @option opts [Integer] :start_index Indicates from what row to start returning data.
  # @option opts [String] :fields Comma delimited list of fields to return (e.g. field_1,field_2,..)
  # @option opts [String] :sort_by Sort order
  # @return [ACHListResponse]
  describe 'get_all_ach_funding_sources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_ach_fundingsourcetoken
  # Returns a user ACH account
  # @param funding_source_token Funding account token
  # @param [Hash] opts the optional parameters
  # @return [AchResponseModel]
  describe 'get_fundingsources_ach_fundingsourcetoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_ach_fundingsourcetoken_verificationamounts
  # Returns the dollar amounts used to verify the ACH account
  # @param funding_source_token Funding account token
  # @param [Hash] opts the optional parameters
  # @return [AchVerificationModel]
  describe 'get_fundingsources_ach_fundingsourcetoken_verificationamounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_addresses_business_businesstoken
  # Lists all addresses for a business
  # @param business_token Business token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [CardholderAddressListResponse]
  describe 'get_fundingsources_addresses_business_businesstoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_addresses_fundingsourceaddresstoken
  # Returns a user address for a funding source
  # @param funding_source_address_token Funding source address token
  # @param [Hash] opts the optional parameters
  # @return [CardholderAddressResponse]
  describe 'get_fundingsources_addresses_fundingsourceaddresstoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_addresses_user_usertoken
  # Lists all addresses for a user
  # @param user_token User token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [CardholderAddressListResponse]
  describe 'get_fundingsources_addresses_user_usertoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_business_businesstoken
  # Lists all funding sources for a business
  # @param business_token Business token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Type, such as a payment card or ACH
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [FundingAccountListResponse]
  describe 'get_fundingsources_business_businesstoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_paymentcard_fundingsourcetoken
  # Returns a specific payment card
  # @param funding_source_token Funding token
  # @param [Hash] opts the optional parameters
  # @return [PaymentCardResponseModel]
  describe 'get_fundingsources_paymentcard_fundingsourcetoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_program_token
  # Returns a specific program funding source
  # @param token Program funding source token
  # @param [Hash] opts the optional parameters
  # @return [ProgramFundingSourceResponse]
  describe 'get_fundingsources_program_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_programgateway_token
  # Returns a gateway program funding source
  # @param token Gateway program funding source token
  # @param [Hash] opts the optional parameters
  # @return [GatewayProgramFundingSourceResponse]
  describe 'get_fundingsources_programgateway_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fundingsources_user_usertoken
  # Lists all funding sources for a user
  # @param user_token User token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Type, such as a payment card or ACH
  # @option opts [String] :fields Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.
  # @return [FundingAccountListResponse]
  describe 'get_fundingsources_user_usertoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_ach
  # Registers an ACH funding source
  # @param [Hash] opts the optional parameters
  # @option opts [AchModel] :body 
  # @return [AchResponseModel]
  describe 'post_fundingsources_ach test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_addresses
  # Creates an account holder address for a funding source
  # @param [Hash] opts the optional parameters
  # @option opts [CardHolderAddressModel] :body 
  # @return [CardholderAddressResponse]
  describe 'post_fundingsources_addresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_paymentcard
  # Registers a payment card funding source
  # @param [Hash] opts the optional parameters
  # @option opts [TokenRequest] :body 
  # @return [PaymentCardResponseModel]
  describe 'post_fundingsources_paymentcard test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_program
  # Creates a program funding source
  # @param [Hash] opts the optional parameters
  # @option opts [ProgramFundingSourceRequest] :body 
  # @return [ProgramFundingSourceResponse]
  describe 'post_fundingsources_program test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_program_ach
  # Registers an ACH funding source for a program
  # @param [Hash] opts the optional parameters
  # @option opts [BaseAchRequestModel] :body 
  # @return [BaseAchResponseModel]
  describe 'post_fundingsources_program_ach test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fundingsources_programgateway
  # Creates a gateway program funding source
  # @param [Hash] opts the optional parameters
  # @option opts [GatewayProgramFundingSourceRequest] :body 
  # @return [GatewayProgramFundingSourceResponse]
  describe 'post_fundingsources_programgateway test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_ach_fundingsourcetoken
  # Verifies a bank account as a funding source
  # @param funding_source_token 
  # @param [Hash] opts the optional parameters
  # @option opts [AchVerificationModel] :body 
  # @return [AchResponseModel]
  describe 'put_fundingsources_ach_fundingsourcetoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_addresses_fundingsourceaddresstoken
  # Updates the account holder address for a funding source
  # @param funding_source_address_token Funding source address token
  # @param [Hash] opts the optional parameters
  # @option opts [CardHolderAddressUpdateModel] :body 
  # @return [CardholderAddressResponse]
  describe 'put_fundingsources_addresses_fundingsourceaddresstoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_fundingsourcetoken
  # Updates a specific payment card 
  # @param funding_source_token Funding account token
  # @param body Payment card
  # @param [Hash] opts the optional parameters
  # @return [PaymentCardResponseModel]
  describe 'put_fundingsources_fundingsourcetoken test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_fundingsourcetoken_default
  # Configures a default funding source
  # @param funding_source_token Funding account
  # @param [Hash] opts the optional parameters
  # @return [PaymentCardResponseModel]
  describe 'put_fundingsources_fundingsourcetoken_default test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_program_token
  # Updates a specific program funding source
  # @param token Program funding source token
  # @param [Hash] opts the optional parameters
  # @option opts [ProgramFundingSourceUpdateRequest] :body 
  # @return [ProgramFundingSourceResponse]
  describe 'put_fundingsources_program_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_programgateway_custom_header_token
  # Updates a specific gateway program funding source Custom headers
  # @param token Gateway program funding source token
  # @param [Hash] opts the optional parameters
  # @option opts [GatewayProgramCustomHeaderUpdateRequest] :body 
  # @return [GatewayProgramFundingSourceResponse]
  describe 'put_fundingsources_programgateway_custom_header_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_fundingsources_programgateway_token
  # Updates a specific gateway program funding source
  # @param token Gateway program funding source token
  # @param [Hash] opts the optional parameters
  # @option opts [GatewayProgramFundingSourceUpdateRequest] :body 
  # @return [GatewayProgramFundingSourceResponse]
  describe 'put_fundingsources_programgateway_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
