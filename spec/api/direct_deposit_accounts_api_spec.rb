=begin
#Marqeta Core API

#Simplified management of your payment programs

The version of the OpenAPI document: 3.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Marqeta::DirectDepositAccountsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DirectDepositAccountsApi' do
  before do
    # run before each test
    @api_instance = Marqeta::DirectDepositAccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DirectDepositAccountsApi' do
    it 'should create an instance of DirectDepositAccountsApi' do
      expect(@api_instance).to be_instance_of(Marqeta::DirectDepositAccountsApi)
    end
  end

  # unit tests for create_account
  # Creates new direct deposit account for cardholder.
  # @param body Create direct deposit account for cardholder
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountResponse]
  describe 'create_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_transition
  # Creates new transition for a direct deposit account.
  # @param body Create transition for direct deposit account
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountTransitionResponse]
  describe 'create_transition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cdd_info
  # Get direct deposit account transition list for card holder.
  # @param token Get CDD info for a specific DDA token
  # @param [Hash] opts the optional parameters
  # @return [CustomerDueDiligenceResponse]
  describe 'get_cdd_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_direct_deposit_account
  # Get direct deposit account.
  # @param token Get specific direct deposit account
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountResponse]
  describe 'get_direct_deposit_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_direct_deposit_account_transition
  # Get direct deposit account transition.
  # @param token Get specific direct deposit account transition
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountTransitionResponse]
  describe 'get_direct_deposit_account_transition test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transition_list
  # Get direct deposit account transition list for card holder.
  # @param user_token Get direct deposit account transition list for user
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :sort_by Sort order
  # @return [DirectDepositAccountTransitionResponse]
  describe 'get_transition_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_direct_deposit_accounts
  # List all specific direct deposit accounts.
  # @param token Get specific direct deposit account
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of users to retrieve
  # @option opts [Integer] :start_index Start index
  # @option opts [String] :sort_by Sort order
  # @option opts [String] :state Direct deposit account status
  # @return [DirectDepositAccountListResponse]
  describe 'get_user_direct_deposit_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_for_direct_deposit_account
  # Get User for Plain Text Account Number
  # @param account_number Get user associated with direct deposit account number
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountResponse]
  describe 'get_user_for_direct_deposit_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update direct deposit account.
  # @param token 
  # @param body Update direct deposit account
  # @param [Hash] opts the optional parameters
  # @return [DirectDepositAccountResponse]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cdd_info
  # Update CDD answers for Direct Deposit Account
  # @param token 
  # @param cddtoken 
  # @param body Update CDD answers
  # @param [Hash] opts the optional parameters
  # @return [CustomerDueDiligenceResponse]
  describe 'update_cdd_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
